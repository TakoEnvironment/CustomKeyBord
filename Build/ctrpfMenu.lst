         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.13]
001010a8 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
001010ac 0000023c T CTRPluginFramework::main()
001012e8 00000038 T CTRPluginFramework::No_1(CTRPluginFramework::MenuEntry*)
00101320 00000038 T CTRPluginFramework::No_2(CTRPluginFramework::MenuEntry*)
00101358 000000d8 T CTRPluginFramework::custom_old(CTRPluginFramework::MenuEntry*)
00101430 000000d8 T CTRPluginFramework::custom_new(CTRPluginFramework::MenuEntry*)
00101508 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
001015b8 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
001015b8 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
001015e8 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
00101698 00000098 T CTRPluginFramework::QuickMenu::~QuickMenu()
00101698 00000098 T CTRPluginFramework::QuickMenu::~QuickMenu()
00101730 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00101730 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
001017fc 0000027c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00101a78 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
00101aac 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00101ed0 00000038 T onLoadCro
00101f08 00000164 T CTRPluginFramework::Initialize()
0010206c 00000098 T CTRPluginFramework::ThreadExit()
00102104 00000060 T abort
00102164 00000024 T CTRPluginFramework::ThreadInit(void*)
00102188 00000068 T LaunchMainThread
001021f0 0000000c t _GLOBAL__sub_I_g_mainThread
001021fc 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001021fc 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00102214 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00102214 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00102234 00000008 T CTRPluginFramework::Color::ToU32() const
00102240 00000120 T CTRPluginFramework::Color::Fade(double)
00102360 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
001023a0 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
00102420 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
001025f8 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
001027c4 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
00102844 00000004 T CTRPluginFramework::OSD::TryLock()
00102848 00000004 T CTRPluginFramework::OSD::Unlock()
0010284c 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102910 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
001029b8 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001029b8 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00102a08 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00102a08 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00102a70 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00102a70 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00102a9c 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
00102aa4 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
00102aac 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00102ac8 00000028 T CTRPluginFramework::Keyboard::Open() const
00102af0 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00102b68 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00102c18 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00102c6c 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00102cd4 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
00102d70 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00102dfc 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00102ea4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00102f8c 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00103018 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
001030c0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
001031a8 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00103234 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
001032dc 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
001033c4 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001033c4 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00103410 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00103410 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00103440 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
00103448 00000028 t __tcf_0
00103470 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
001034e8 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
001034f0 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
00103570 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
001035ec 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
001036c4 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001036c4 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001036e0 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
001036e0 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00103720 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
00103730 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
001037f0 00000020 T CTRPluginFramework::HotkeyManager::Count()
00103810 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
00103944 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00103a6c 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00103a6c 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00103ad8 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
00103aec 00000038 T CTRPluginFramework::PluginMenu::Run() const
00103b24 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
00103b2c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
00103b3c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
00103b48 00000030 t CTRPluginFramework::GetCurrentTime()
00103b78 00000014 T CTRPluginFramework::Clock::Clock()
00103b78 00000014 T CTRPluginFramework::Clock::Clock()
00103b8c 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00103bc4 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00103bf4 00000044 T CTRPluginFramework::Clock::Restart()
00103c38 00000014 T CTRPluginFramework::Controller::GetKeysDown()
00103c4c 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
00103c68 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00103c84 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00103ca0 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
00103cbc 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00103ce8 0000002c T CTRPluginFramework::Controller::Update()
00103d14 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00103d84 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00103eac 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00103f30 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
00103fac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00104024 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00104088 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00104118 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010422c 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001042a0 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010432c 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001043a4 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010441c 00000034 T CTRPluginFramework::Directory::Close() const
00104450 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00104550 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
00104564 00000008 T CTRPluginFramework::Directory::IsOpen() const
0010456c 0000002c T CTRPluginFramework::Directory::Directory()
0010456c 0000002c T CTRPluginFramework::Directory::Directory()
00104598 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00104598 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001045cc 0000002c T CTRPluginFramework::Directory::~Directory()
001045cc 0000002c T CTRPluginFramework::Directory::~Directory()
001045f8 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
001046f8 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010473c 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
00104788 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
0010490c 0000010c T CTRPluginFramework::Directory::_List() const
00104a18 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00104b80 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00104ce0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00104d18 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104df8 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104e58 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104ee0 0000005c T CTRPluginFramework::File::Close() const
00104f3c 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00105018 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
001050c8 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
001051b0 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001051dc 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0010528c 00000008 T CTRPluginFramework::File::Tell() const
00105294 00000010 T CTRPluginFramework::File::Rewind() const
001052a4 00000008 T CTRPluginFramework::File::Flush() const
001052ac 00000044 T CTRPluginFramework::File::GetSize() const
001052f0 00000008 T CTRPluginFramework::File::IsOpen() const
001052f8 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0010530c 00000034 T CTRPluginFramework::File::File()
0010530c 00000034 T CTRPluginFramework::File::File()
00105340 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00105340 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00105380 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
00105480 00000010 T CTRPluginFramework::Process::GetHandle()
00105490 00000010 T CTRPluginFramework::Process::GetTitleID()
001054a0 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105500 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105538 00000024 T CTRPluginFramework::Process::GetTextSize()
0010555c 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
001055b8 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
0010562c 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
001056d4 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0010578c 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0010583c 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
00105864 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
001058a4 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
001058d0 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
001058f4 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0010593c 00000010 T CTRPluginFramework::System::IsNew3DS()
0010594c 00000010 T CTRPluginFramework::System::IsLoaderNTR()
0010595c 00000014 T CTRPluginFramework::Time::Time()
0010595c 00000014 T CTRPluginFramework::Time::Time()
00105970 00000020 T CTRPluginFramework::Time::AsSeconds() const
00105990 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
001059a8 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
001059b0 00000028 T CTRPluginFramework::Seconds(float)
001059d8 00000010 T CTRPluginFramework::Milliseconds(int)
001059e8 00000008 T CTRPluginFramework::Microseconds(long long)
001059f0 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
00105a04 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00105a18 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
00105a2c 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
00105a4c 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
00105a98 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
00105ab0 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
00105b14 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
00105b88 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
00105be4 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
00105c64 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105d18 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00105e58 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00105e90 0000001c T CTRPluginFramework::InitializeRandomEngine()
00105eac 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00105fb8 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
00106020 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0010603c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
001060b4 0000001c W CTRPluginFramework::File::~File()
001060b4 0000001c W CTRPluginFramework::File::~File()
001060d0 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001060d0 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106170 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00106170 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
001061d0 00000010 W CTRPluginFramework::BMPImage::DataClear()
001061e0 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
00106314 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
00106340 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
00106478 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
00106710 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
001067e0 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
00106898 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
00106950 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
001069ac 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
00106b40 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
00106bc0 000001ec T CTRPluginFramework::Preferences::WriteSettings()
00106dac 00000004 T CTRPluginFramework::Preferences::Initialize()
00106db0 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
00106e28 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
00106e30 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00106ea8 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
00106eb4 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
00106ec0 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
00106fc0 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00106fc0 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00106ff0 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
001070bc 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
001071d0 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
001073d4 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010742c 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
00107900 00000010 T CTRPluginFramework::Glyph::Width() const
00107910 00000060 T CTRPluginFramework::Font::Initialize()
00107970 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
00107cc4 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
00107fcc 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
001080c0 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
00108128 00000020 T CTRPluginFramework::Font::GetGlyph(char)
00108148 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
00108148 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
00108174 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
00108174 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
00108194 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010824c 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
001082a0 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
001082a0 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010833c 0000000c T CTRPluginFramework::OSDImpl::Lock()
00108348 0000001c T CTRPluginFramework::OSDImpl::TryLock()
00108364 0000000c T CTRPluginFramework::OSDImpl::Unlock()
00108370 000000e4 T CTRPluginFramework::OSDImpl::Draw()
00108454 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010852c 000001b8 T CTRPluginFramework::InstallOSD()
001086e4 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010870c 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
001087ec 00000108 T CTRPluginFramework::OSDImpl::Update()
001088f4 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
00108f0c 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
00108f74 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
00108fd8 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
00109004 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
00109028 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
00109060 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
00109098 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
001090c8 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
001090f0 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
00109110 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010914c 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
00109194 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
001091d8 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
001092dc 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
00109318 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
00109388 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010940c 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109484 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010951c 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
001095c0 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
00109660 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
00109680 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
001096bc 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
00109934 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
00109a54 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
00109a70 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
00109ab4 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
00109b5c 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
00109c04 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
00109cc4 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
00109d58 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
00109e00 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
00109e54 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
00109e54 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
00109e98 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
00109eec 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010a080 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010a130 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010a178 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010a804 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010a840 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010a980 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010aac4 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010ab8c 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010ad50 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010ad80 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010aeb0 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010af84 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010b0d0 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010b1d4 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010b328 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010b4c0 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010b6ac 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010b71c 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010b788 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010b7ac 00000028 T CTRPluginFramework::Window::~Window()
0010b7ac 00000028 T CTRPluginFramework::Window::~Window()
0010b7d4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010b7d4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010b7d8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010b7f4 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010b808 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010b86c 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010b86c 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010b934 00000064 T CTRPluginFramework::Window::Draw() const
0010b998 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010ba70 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010ba88 00000018 T CTRPluginFramework::Window::MustClose() const
0010baa0 00000014 T CTRPluginFramework::Window::Close() const
0010bab4 00000004 T CTRPluginFramework::Window::GetRect() const
0010bab8 0000002c T CTRPluginFramework::Window::Initialize()
0010bae4 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010bb64 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010bc0c 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010bdbc 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010bde8 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010be24 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010be60 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010be9c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010bed8 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010bf14 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010bf40 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010bf7c 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010bfb8 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010bff4 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0010c030 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0010c05c 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0010c098 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0010c0c4 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0010c0f0 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0010c11c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0010c158 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0010c184 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0010c1c0 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0010c1ec 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0010c220 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0010c25c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0010c288 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0010c2c4 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0010c2f0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0010c31c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0010c348 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0010c374 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0010c3a0 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0010c3cc 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0010c3f8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0010c424 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0010c460 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
0010c47c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010c47c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010c480 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010c494 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
0010c4f8 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
0010c57c 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
0010c644 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0010c6d4 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0010c7f0 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
0010c860 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
0010c900 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
0010c92c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010c92c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010c95c 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
0010ca30 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
0010ca6c 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010ca6c 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010cb88 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010cc08 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
0010cc80 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
0010cd24 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010cd24 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010ce68 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010ce68 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010cfb0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010cfb0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010d014 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0010d01c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0010d024 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0010d02c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0010d034 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
0010d03c 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0010d1a0 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0010d634 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0010d698 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0010d728 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0010d7a8 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0010d82c 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0010d98c 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0010dc0c 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0010e188 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0010e1f0 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0010e240 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0010e2b0 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0010e2b8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0010e2b8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0010e2fc 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
0010e32c 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0010e404 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0010e5d0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0010e5fc 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0010e5fc 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0010e624 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
0010e740 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
0010e7d0 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0010f0c4 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0010f9b8 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00110cfc 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0011243c 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00112480 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
001126d4 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
00112724 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0011278c 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
001127d4 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00112af8 00000250 T CTRPluginFramework::KeyboardImpl::Run()
00112d48 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00112dc0 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00112dc8 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00112ddc 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00112ddc 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00112e04 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00112e04 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00112e2c 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00112e48 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00112e64 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00112f7c 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00112f7c 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00113054 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00113054 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00113130 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
00113138 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
00113144 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0011314c 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00113170 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
001131a0 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
001131bc 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
00113224 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00113224 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001132f0 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0011330c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011330c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001133c8 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
001133dc 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0011342c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
00113444 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
00113468 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
00113478 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0011349c 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
00113574 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
001135d4 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
001135e4 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
001135f4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
00113604 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113604 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113608 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00113608 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
0011360c 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00113628 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00113644 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00113658 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
0011366c 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
00113694 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001136f8 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
0011375c 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00113784 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
001137a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00113820 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011388c 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
00113960 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00113a00 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00113a00 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00113c68 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
00113c7c 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
00113cd4 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00113d28 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00113e48 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00113e48 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00113e84 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00113ff8 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00114078 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001140f8 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
00114258 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00114300 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00114484 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0011460c 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00114618 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0011479c 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
001147e0 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00114810 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
001148e4 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0011496c 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00114ae0 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00114b50 00000030 W CTRPluginFramework::ARCode::~ARCode()
00114b50 00000030 W CTRPluginFramework::ARCode::~ARCode()
00114b80 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
00114cc4 0000001c W CTRPluginFramework::ARCode::~ARCode()
00114ce0 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00114d38 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00114d38 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00114d64 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
00114d70 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
00114d7c 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00114e98 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00114ed4 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00114ee0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00114eec 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00114f0c 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00114fe4 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00115180 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
001151d4 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
00115334 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0011534c 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
00115470 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
00115548 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
00115704 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
001157dc 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
00115860 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
00115a74 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00115c78 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00115e7c 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00116090 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
001160e8 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011615c 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
001161d0 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00116228 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
001162b0 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
001162bc 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
001162bc 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
001162e4 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00116300 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
00116394 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00116394 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
001163bc 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
001163d8 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
001163d8 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00116400 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011641c 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011641c 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00116444 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00116460 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
00116460 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
00116480 00000030 W CTRPluginFramework::TextBox::~TextBox()
00116480 00000030 W CTRPluginFramework::TextBox::~TextBox()
001164b0 0000001c W CTRPluginFramework::TextBox::~TextBox()
001164cc 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001164cc 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001165bc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
001165c4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
001165c4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
00116658 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
00116678 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00116804 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
00116824 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
00116840 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0011685c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
00116864 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0011686c 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011686c 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011688c 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
00116980 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
001170dc 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
00117134 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00117164 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
00117228 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011725c 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011738c 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
001174c8 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011758c 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00117694 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00117694 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
001176fc 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
001177f8 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
00117938 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00117ad0 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117b50 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117bc4 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117c38 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117cb8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
00117d30 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
00117d74 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
00117eb0 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
00117f18 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
00118084 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
001180d4 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
00118180 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011864c 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
001186bc 000000f4 t CTRPluginFramework::ClearSearchFolder()
001187b0 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
001187b0 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00118908 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
00118964 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
00118964 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
00118fa4 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
00118fd8 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
001191f8 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
00119220 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
00119288 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
001192b8 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011938c 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
00119438 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
00119478 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
001196e4 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00119a6c 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
00119b48 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
00119b80 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
00119dfc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
00119e10 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
00119e24 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
00119e38 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
00119f4c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
00119f50 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
00119f54 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
00119f6c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
00119f84 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
00119f9c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
00119fb4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
00119fcc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
00119fe4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
00119ffc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011a014 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011a02c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011a0a4 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011a108 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011a228 0000005c t CTRPluginFramework::Reboot()
0011a284 00000064 t CTRPluginFramework::Shutdown()
0011a2e8 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011a3e0 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011a520 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011a6e8 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011a8dc 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011b0d8 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011b0d8 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011b22c 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011b338 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011b3dc 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011b41c 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011b458 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011b494 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011b59c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011b624 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011b6c4 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011b740 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011b7f4 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011b980 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011b9c8 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011bb14 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011bc70 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011be1c 00000030 W std::__cxx11::to_string(unsigned long)
0011be4c 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011bed0 00000584 T CTRPluginFramework::SearchMenu::Draw()
0011c454 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011c454 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011c508 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0011c538 00000230 T CTRPluginFramework::SearchMenu::Update()
0011c768 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011cc74 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
0011ccd8 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011ccd8 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011cd6c 0000001c T CTRPluginFramework::SubMenu::operator()()
0011cd88 00000214 T CTRPluginFramework::SubMenu::Draw()
0011cf9c 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0011d058 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0011d060 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0011d07c 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011d214 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011d25c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
0011d320 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0011d3e0 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
0011d41c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
0011d494 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
0011d734 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
0011d9f0 00000040 W CTRPluginFramework::Search::~Search()
0011d9f0 00000040 W CTRPluginFramework::Search::~Search()
0011da30 00000044 T CTRPluginFramework::Search32::~Search32()
0011da30 00000044 T CTRPluginFramework::Search32::~Search32()
0011da74 0000001c T CTRPluginFramework::Search32::~Search32()
0011da90 0000001c W CTRPluginFramework::Search::~Search()
0011daac 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0011daac 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0011dcd4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011dcd4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011dcf4 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0011dcf4 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0011dd50 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0011de88 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0011ded0 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0011e014 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0011e158 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011e19c 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0011e1c8 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0011e2b4 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0011e2e8 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0011e31c 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0011e428 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0011e470 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0011e788 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011e9e8 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011ec60 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011eec0 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0011eef4 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0011f218 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0011fa44 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00120310 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00120bbc 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012196c 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122520 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122c14 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122ff4 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123790 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123bd4 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012401c 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124460 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124a90 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012534c 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125c0c 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001264c8 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127118 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012715c 00000194 T CTRPluginFramework::Search::CheckNextRegion()
001272f0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
00127368 00000008 T CTRPluginFramework::Search::GetHeader() const
00127370 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
001273c8 0000000c T CTRPluginFramework::Search::GetType() const
001273d4 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
001273ec 00000070 T CTRPluginFramework::Search::WriteHeader()
0012745c 00000058 T CTRPluginFramework::Search::WriteResults()
001274b4 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
00127500 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
00127720 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
00127720 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
00127960 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
00127a38 0000008c T CTRPluginFramework::Search::CreateIndexTable()
00127ac4 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00127ac4 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00127c6c 00000080 T CTRPluginFramework::Search::Cancel()
00127cec 00000118 T CTRPluginFramework::Search::ExecuteSearch()
00127e04 00000090 T CTRPluginFramework::EventManager::EventManager()
00127e04 00000090 T CTRPluginFramework::EventManager::EventManager()
00127e94 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
00127ffc 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
00128040 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
001282cc 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
001283d0 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
001283d8 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
001283fc 00000004 t addrMapNodeDestructor(rbtree_node*)
00128400 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
00128510 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
00128518 00000050 T CTRPluginFramework::Heap::Free(void*)
00128568 0000000c T CTRPluginFramework::Heap::SpaceFree()
00128574 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012869c 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
001286e8 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
00128700 00000018 T IsPaused
00128718 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
001288a0 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
001289f8 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
00128a58 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
00128a70 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
00128a70 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
00128aa0 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
00128b00 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
00128ba8 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
00128c10 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
00128cc4 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
00128d7c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
00128d84 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
00128de0 00000118 T CTRPluginFramework::ScreenImpl::Flush()
00128ef8 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
00129010 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
00129068 00000078 T CTRPluginFramework::ScreenImpl::Clean()
001290e0 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
00129154 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012915c 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
00129164 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012916c 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
00129188 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
001291a4 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
001291f8 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
00129228 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
00129280 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
001292f4 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
001293e4 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
001293f4 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
00129404 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012942c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012942c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012944c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
001294d4 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
001294d4 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012960c 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00129710 0000006c T CTRPluginFramework::ARCode::Update()
0012977c 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012977c 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
00129840 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
00129840 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
00129880 00000040 T CTRPluginFramework::ARCodeContext::Update()
001298c0 00000048 T CTRPluginFramework::ARCodeContext::Clear()
00129908 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012997c 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
001299dc 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
00129aa8 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
00129aa8 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
00129ab4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
00129b3c 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
00129b98 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012a308 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012a308 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012a388 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012a388 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012a388 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012a388 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012a3d8 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012aee8 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012aee8 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012b088 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012b36c 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012b388 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012b410 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012b448 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012b5cc 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012b610 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012b674 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012b6a0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012b6a0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012b6c8 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012b714 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012b778 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012b834 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012bb5c 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0012c01c 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0012c484 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0012c940 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0012ca30 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012ca30 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012ca50 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
0012ca6c 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012cb80 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012cbf8 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
0012cc10 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012cd04 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012cd14 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0012cdec 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0012ce40 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ce84 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012cecc 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0012d3a4 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0012d3a4 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0012d3e8 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0012d3e8 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0012d3fc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0012d41c 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0012d5a8 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
0012d710 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0012df30 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012dff4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0012e06c 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0012e3b0 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0012e404 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012e404 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012e464 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0012e480 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012e480 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012e4d0 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
0012e56c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0012e598 00000034 W MemPool::DelBlock(MemBlock*)
0012e5cc 0000005c T MemPool::CoalesceRight(MemBlock*)
0012e628 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
0012e744 00000100 T MemPool::Deallocate(MemChunk const&)
0012e844 00000020 T MemPool::GetFreeSpace()
0012e864 00000124 T __system_allocateHeaps
0012e988 00000034 T arm11kSetKProcessId
0012e9bc 00000028 T arm11kGetCurrentKProcess
0012e9e4 00000024 T arm11kMemcpy
0012ea08 00000064 T arm11kSvcControlMemory
0012ea6c 00000018 T getKernelObjectPtr
0012ea84 000000a0 T cfguInit
0012eb24 00000034 T cfguExit
0012eb58 00000044 T CFGU_GetConfigInfoBlk2
0012eb9c 00000014 T CFGU_GetSystemLanguage
0012ebb0 000000a8 T fontEnsureMapped
0012ec58 0000011c T fontGlyphIndexFromCodePoint
0012ed74 00000074 T fontGetCharWidthInfo
0012ede8 00000050 T srvExit
0012ee38 00000034 T srvRegisterClient
0012ee6c 00000064 T srvInit
0012eed0 00000068 T srvGetServiceHandleDirect
0012ef38 00000004 T srvGetServiceHandle
0012ef3c 00000034 T srvPublishToSubscriber
0012ef70 0000000c T __sync_init
0012ef7c 00000018 T __sync_fini
0012ef94 00000018 T LightLock_Init
0012efac 0000008c T LightLock_Lock
0012f038 00000034 T LightLock_TryLock
0012f06c 00000050 T LightLock_Unlock
0012f0bc 00000018 T RecursiveLock_Init
0012f0d4 00000030 T RecursiveLock_Lock
0012f104 00000044 T RecursiveLock_TryLock
0012f148 00000034 T RecursiveLock_Unlock
0012f17c 00000030 T LightEvent_Init
0012f1ac 00000060 T LightEvent_Clear
0012f20c 00000060 T LightEvent_Pulse
0012f26c 000000b4 T LightEvent_Signal
0012f320 000000a8 T LightEvent_Wait
0012f3c8 00000168 T threadCreate
0012f530 0000001c T threadFree
0012f54c 00000024 T threadJoin
0012f570 00000030 T threadGetCurrent
0012f5a0 0000003c T threadExit
0012f5dc 0000003c t _thread_begin
0012f618 00000088 T acInit
0012f6a0 00000034 T acExit
0012f6d4 000000a0 T amInit
0012f774 00000034 T amExit
0012f7a8 00000128 T aptSendCommand
0012f8d0 0000006c T APT_CheckNew3DS
0012f93c 00000048 T APT_GetSharedFont
0012f984 00000028 t fsSession
0012f9ac 00000040 t fsSessionForArchive
0012f9ec 00000038 T fsExit
0012fa24 00000028 T FSUSER_Initialize
0012fa4c 000000b0 T fsInit
0012fafc 00000080 T FSUSER_OpenFile
0012fb7c 00000068 T FSUSER_DeleteFile
0012fbe4 000000a4 T FSUSER_RenameFile
0012fc88 00000070 T FSUSER_CreateDirectory
0012fcf8 0000006c T FSUSER_OpenDirectory
0012fd64 00000074 T FSUSER_OpenArchive
0012fdd8 00000058 T FSFILE_Read
0012fe30 00000060 T FSFILE_Write
0012fe90 00000038 T FSFILE_GetSize
0012fec8 00000028 T FSFILE_SetSize
0012fef0 0000003c T FSFILE_Close
0012ff2c 00000024 T FSFILE_Flush
0012ff50 00000050 T FSDIR_Read
0012ffa0 0000003c T FSDIR_Close
0012ffdc 000000e8 t gspEventThreadMain
001300c4 00000098 T gspInitEventHandler
0013015c 00000040 T gspExitEventHandler
0013019c 0000008c T gspExit
00130228 0000005c T gspWaitForEvent
00130284 00000044 T GSPGPU_FlushDataCache
001302c8 00000044 T GSPGPU_InvalidateDataCache
0013030c 00000064 T GSPGPU_RegisterInterruptRelayQueue
00130370 000000dc T gspInit
0013044c 0000002c T GSPGPU_SaveVramSysArea
00130478 0000002c T GSPGPU_RestoreVramSysArea
001304a4 000000bc T hidExit
00130560 00000034 T hidCheckSectionUpdateTime
00130594 0000016c T hidScanInput
00130700 00000010 T hidKeysHeld
00130710 00000010 T hidKeysDown
00130720 00000010 T hidKeysUp
00130730 00000018 T hidTouchRead
00130748 00000090 T HIDUSER_GetHandles
001307d8 00000174 T hidInit
0013094c 00000034 T irrstCheckSectionUpdateTime
00130980 00000070 T irrstScanInput
001309f0 0000001c T irrstKeysHeld
00130a0c 00000050 T IRRST_GetHandles
00130a5c 00000034 T IRRST_Initialize
00130a90 00000124 T irrstInit
00130bb4 0000002c T IRRST_Shutdown
00130be0 000000a8 T irrstExit
00130c88 0000002c t __ctru_get_reent
00130cb4 000000f0 T __system_initSyscalls
00130da4 0000005c T decode_utf16
00130e00 00000138 T decode_utf8
00130f38 00000054 T encode_utf16
00130f8c 000000e0 T encode_utf8
0013106c 000000d4 T utf16_to_utf8
00131140 000000ac T utf8_to_utf16
001311ec 00000054 T rbtree_find
00131240 00000010 T rbtree_init
00131250 00000174 t do_insert
001313c4 00000008 T rbtree_insert
001313cc 00000014 t is_black
001313e0 000002c8 T rbtree_remove
001316a8 00000094 T rbtree_rotate
0013173c T loadCROHooked
00131758 T svcControlMemory
00131778 T svcQueryMemory
001317a8 T svcCreateThread
001317c8 T svcExitThread
001317d0 T svcSleepThread
001317d8 T svcSetThreadPriority
001317e0 T svcReleaseMutex
001317e8 T svcCreateEvent
001317fc T svcSignalEvent
00131804 T svcClearEvent
0013180c T svcMapMemoryBlock
00131814 T svcUnmapMemoryBlock
0013181c T svcCreateAddressArbiter
00131830 T svcArbitrateAddress
00131848 T svcCloseHandle
00131850 T svcWaitSynchronization
00131858 T svcGetSystemTick
00131860 T svcGetSystemInfo
00131878 T svcGetProcessInfo
00131890 T svcConnectToPort
001318a4 T svcSendSyncRequest
001318ac T svcOpenProcess
001318c0 T svcBreak
001318c8 T svcInvalidateProcessDataCache
001318d0 T svcFlushProcessDataCache
001318d8 T svcControlProcessMemory
001318f0 T svcBackdoor
001318f8 T svcKernelSetState
00131900 T svcQueryProcessMemory
00131924 0000004c T Hook::Hook()
00131924 0000004c T Hook::Hook()
00131970 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00131a38 00000060 T Hook::Enable()
00131a98 00000060 T Hook::Disable()
00131af8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00131af8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00131b20 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00131b20 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00131b5c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00131b5c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00131b90 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00131b90 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00131bcc 00000008 T CTRPluginFramework::MessageBox::operator()() const
00131bd4 00000014 T CTRPluginFramework::Touch::IsDown()
00131be8 00000028 T CTRPluginFramework::Touch::GetPosition()
00131c10 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00131c10 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00131c3c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00131c3c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00131c54 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00131d68 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00131d68 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00131d90 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00131e10 00000048 T CTRPluginFramework::LineWriter::Flush()
00131e58 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00131e58 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00131e74 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131ee4 00000018 T CTRPluginFramework::LineWriter::Close()
00131efc 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00131f38 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00131f5c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131f80 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013201c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
0013201c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00132020 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
00132034 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00132118 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00132118 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00132178 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
00132180 000000ac T CTRPluginFramework::ComboBox::Draw()
0013222c 000000ac T CTRPluginFramework::ComboBox::operator()()
001322d8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
001322d8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00132324 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00132340 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00132340 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00132390 00000038 T CTRPluginFramework::ComboBox::Clear()
001323c8 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132420 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
001324b0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
001324b0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
001324b4 00000014 T CTRPluginFramework::FloatingButton::Draw()
001324c8 00000014 T CTRPluginFramework::FloatingButton::operator()()
001324dc 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
001324f0 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
001326b0 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
001326b0 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
001326f4 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001326f4 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001328cc 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001328cc 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00132a3c 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
00132ab4 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00132d70 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
00132e74 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00132e74 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00132e94 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00132eb0 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00132f44 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00132f7c 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00132fe4 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
001330dc 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
001330ec 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
001330fc 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00133104 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00133110 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00133110 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00133178 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
001331f8 00000008 W CTRPluginFramework::Drawable::operator()()
00133200 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00133204 000002e0 T CTRPluginFramework::TextBox::Draw()
001334e4 000000ec T CTRPluginFramework::TextBox::TextBox()
001334e4 000000ec T CTRPluginFramework::TextBox::TextBox()
001335d0 0000000c T CTRPluginFramework::TextBox::Open() const
001335dc 0000000c T CTRPluginFramework::TextBox::Close() const
001335e8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
001335f0 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0013383c 0000000c T CTRPluginFramework::TextBox::DrawConst() const
00133848 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
001338e0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
00133994 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
00133a6c 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
00133aa8 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
00133c90 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00133c90 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00133e28 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00133f10 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00133f10 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00133f14 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00133f28 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00133fc8 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00133fc8 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00134024 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00134024 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
001340c4 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
001340c4 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00134120 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00134128 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
00134250 00000088 T CTRPluginFramework::TouchKey::Draw()
001342d8 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00134370 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00134370 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0013441c 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
001344cc 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0013456c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
00134584 00000030 T CTRPluginFramework::TouchKeyString::operator()()
001345b4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
001345b4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
001345c8 00000024 T CTRPluginFramework::UIContainer::Draw()
001345ec 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
00134620 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
00134644 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0013471c 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
00134760 000000e4 T CTRPluginFramework::Converter::Converter()
00134760 000000e4 T CTRPluginFramework::Converter::Converter()
00134844 00000010 T CTRPluginFramework::Converter::Instance()
00134854 00000108 T CTRPluginFramework::Converter::_Draw()
0013495c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0013495c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00134970 000001e0 T CTRPluginFramework::Converter::operator()()
00134b50 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00134bc8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00134bc8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00134c14 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00134cd0 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00134db8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00134e1c 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00135130 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00135228 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
00135470 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
001356f0 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
001356f0 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
001356f4 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00135710 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00135724 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
00135788 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00135800 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
001358c0 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00135b7c 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00135b7c 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00135da4 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
001361b8 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
001361d0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00136250 00000154 T CTRPluginFramework::GuideReader::Draw()
001363a4 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00136414 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136414 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136418 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
00136434 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00136448 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
001364ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
00136524 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
00136540 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
0013656c 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
001365ec 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
00136704 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
00136734 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
00136778 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
001367bc 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
001367f0 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
00136844 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
00136898 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
00136b18 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
00136b50 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
00137134 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
00137134 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
00137360 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
001373a4 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013758c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
001375e4 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
001376cc 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013774c 00000044 T CTRPluginFramework::HexEditor::_Update()
00137790 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
001378e0 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00137b90 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00137c08 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
00137c08 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
00137ce4 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
00137ce4 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
00137dfc 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
00137e38 00000030 T CTRPluginFramework::Menu::~Menu()
00137e38 00000030 T CTRPluginFramework::Menu::~Menu()
00137e68 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
00137e74 00000008 T CTRPluginFramework::Menu::GetFolder() const
00137e7c 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
00137e84 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
00137eac 000003a4 T CTRPluginFramework::Menu::Draw() const
00138250 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
001382d4 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
00138358 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
00138588 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
001386f8 00000068 T CTRPluginFramework::Menu::ShowNote()
00138760 00000008 T CTRPluginFramework::Menu::CloseNote()
00138768 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
00138770 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
001387b0 00000044 T CTRPluginFramework::Menu::Pop()
001387f4 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
001388b0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
001388b0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
001388d0 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
001388ec 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
001388ec 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
00138980 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138980 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001389e0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001389e0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138a40 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
00138a44 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
00138a50 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
00138a5c 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
00138a68 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
00138a74 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
00138a74 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
00138a78 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
00138a78 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
00138a7c 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00138a98 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00138ab4 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
00138ac8 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
00138adc 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
00138bc4 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
00138c00 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
00138c58 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
00138d0c 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
00138dec 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
00138e78 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
00138ea4 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00138f08 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
00138f6c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
00138fe4 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
00139028 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
00139034 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
00139360 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
00139464 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
001396c4 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
001397c8 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
00139ba4 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
00139c74 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
00139cf4 0000006c T CTRPluginFramework::PluginMenuHome::Init()
00139d60 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
00139de4 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
00139e40 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00139e40 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
00139f98 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
00139fd0 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00139fd0 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013a6ec 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013a764 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a7e4 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a864 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013a970 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013a978 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013a99c 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013a9c0 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013a9e4 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013aa0c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013aa34 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013aa5c 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013aa7c 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013bec0 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013bf24 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013bf44 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0013bf68 00000004 t addrMapNodeDestructor(rbtree_node*)
0013bf6c 000000d8 T mappableAlloc
0013c044 00000050 T mappableFree
0013c094 00000008 T envGetHandle
0013c09c 0000005c t getSysTime
0013c0f8 000000fc T __libctru_gtod
0013c1f4 00000014 W __appExit
0013c208 00000078 W __libctru_exit
0013c280 00000050 T rbtree_node_next
0013c2d0 00000008 T __cxa_pure_virtual
0013c2d8 00000010 T __aeabi_atexit
0013c2e8 00000004 T operator new[](unsigned int)
0013c2ec 00000058 T operator new(unsigned int)
0013c344 00000034 T __cxxabiv1::__terminate(void (*)())
0013c378 00000018 T std::terminate()
0013c390 0000000c T __cxxabiv1::__unexpected(void (*)())
0013c39c 00000018 T std::unexpected()
0013c3b4 00000014 T std::get_terminate()
0013c3c8 00000014 T std::get_unexpected()
0013c3dc 0000000c T std::bad_alloc::what() const
0013c3e8 00000020 T std::bad_alloc::~bad_alloc()
0013c3e8 00000020 T std::bad_alloc::~bad_alloc()
0013c408 0000002c T std::bad_alloc::~bad_alloc()
0013c434 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0013c59c 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0013c604 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0013c6dc 000006fc T __gxx_personality_v0
0013cdd8 00000004 T operator delete[](void*)
0013cddc 00000014 T std::get_new_handler()
0013cdf0 0000005c T __cxa_guard_acquire
0013ce4c 0000000c T __cxa_guard_release
0013ce58 00000004 T std::exception::~exception()
0013ce58 00000004 T std::exception::~exception()
0013ce5c 00000004 T std::bad_exception::~bad_exception()
0013ce5c 00000004 T std::bad_exception::~bad_exception()
0013ce60 0000000c T transaction clone for std::exception::what() const
0013ce60 0000000c T std::exception::what() const
0013ce6c 0000000c T transaction clone for std::bad_exception::what() const
0013ce6c 0000000c T std::bad_exception::what() const
0013ce78 00000018 T std::bad_exception::~bad_exception()
0013ce90 00000004 T operator delete(void*, unsigned int)
0013ce94 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0013cef4 00000070 T __cxa_init_primary_exception
0013cf64 00000054 T __cxa_throw
0013cfb8 000000b0 T __cxa_rethrow
0013d068 000000d0 T __cxa_begin_catch
0013d138 000000e0 T __cxa_end_catch
0013d218 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0013d304 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
0013d3b8 00000044 T __cxa_allocate_exception
0013d3fc 00000030 T __cxa_free_exception
0013d42c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0013d46c 00000004 T operator delete(void*)
0013d470 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013d470 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013d490 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013d4bc 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013d528 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013d604 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013d648 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0013d660 00000014 T std::__detail::_List_node_base::_M_unhook()
0013d674 0000002c T std::__throw_bad_alloc()
0013d6a0 00000040 T std::__throw_logic_error(char const*)
0013d6e0 00000040 T std::__throw_invalid_argument(char const*)
0013d720 00000040 T std::__throw_length_error(char const*)
0013d760 00000040 T std::__throw_out_of_range(char const*)
0013d7a0 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0013d81c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0013d870 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0013d884 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0013d8a8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0013d8cc 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d984 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0013da90 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0013db0c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013db0c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013db78 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0013db78 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0013db9c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0013dc2c 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0013dd3c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0013ddac 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0013de18 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0013de40 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0013de84 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0013de9c 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0013dfc0 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
0013e008 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0013e290 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0013e2c8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e314 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0013e374 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0013e408 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e418 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e428 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0013e454 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0013e49c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
0013e4e4 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0013e588 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0013e598 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0013e5fc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0013e62c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0013e678 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e678 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013e6a8 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0013e720 T __cxa_end_cleanup
0013e730 00000138 T __cxa_type_match
0013e868 000000b4 T __cxa_begin_cleanup
0013e91c 000000b4 T __gnu_end_cleanup
0013e9d0 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0013ea40 0000002c T __cxa_call_terminate
0013ea6c 00000158 T __cxa_call_unexpected
0013ebc4 0000000c T __cxa_get_globals_fast
0013ebd0 0000000c T __cxa_get_globals
0013ebdc 00000004 T std::type_info::~type_info()
0013ebdc 00000004 T std::type_info::~type_info()
0013ebe0 00000008 T std::type_info::__is_pointer_p() const
0013ebe0 00000008 T std::type_info::__is_function_p() const
0013ebe8 0000004c T std::type_info::operator==(std::type_info const&) const
0013ec34 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0013ec90 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013eca4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0013eca4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0013ecc4 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0013ecf0 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013ed58 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013ed84 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0013edc8 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013edc8 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013ede8 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013ee14 00000008 T std::logic_error::what() const
0013ee1c 00000064 T std::logic_error::~logic_error()
0013ee1c 00000064 T std::logic_error::~logic_error()
0013ee80 0000001c T std::logic_error::~logic_error()
0013ee9c 00000020 T std::invalid_argument::~invalid_argument()
0013ee9c 00000020 T std::invalid_argument::~invalid_argument()
0013eebc 00000028 T std::invalid_argument::~invalid_argument()
0013eee4 00000020 T std::length_error::~length_error()
0013eee4 00000020 T std::length_error::~length_error()
0013ef04 00000028 T std::length_error::~length_error()
0013ef2c 00000020 T std::out_of_range::~out_of_range()
0013ef2c 00000020 T std::out_of_range::~out_of_range()
0013ef4c 00000028 T std::out_of_range::~out_of_range()
0013ef74 00000038 T std::logic_error::logic_error(char const*)
0013ef74 00000038 T std::logic_error::logic_error(char const*)
0013efac 00000020 T std::invalid_argument::invalid_argument(char const*)
0013efac 00000020 T std::invalid_argument::invalid_argument(char const*)
0013efcc 00000020 T std::length_error::length_error(char const*)
0013efcc 00000020 T std::length_error::length_error(char const*)
0013efec 00000020 T std::out_of_range::out_of_range(char const*)
0013efec 00000020 T std::out_of_range::out_of_range(char const*)
0013f00c 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0013f078 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0013f0f8 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0013f1f0 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0013f274 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
0013f274 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
0013f2e4 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0013f2e8 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0013f318 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0013f318 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0013f358 0000015c T ceil
0013f4b4 000000b4 T ceilf
0013f568 0000016c T floor
0013f6d4 00000088 T roundf
0013f760 00000020 T log2
0013f780 00000164 T log
0013f8e8 000002dc T __ieee754_log
0013fbc4 00000008 T matherr
0013fbd0 00000010 T nan
0013fbe0 0000002c t __aeabi_f2lz
0013fbe0 0000002c T __fixsfdi
0013fc10 00000040 t __aeabi_f2ulz
0013fc10 00000040 T __fixunssfdi
0013fc50 00000128 t __udivmoddi4
0013fd78 00000018 t selfrel_offset31
0013fd90 00000094 t search_EIT_table
0013fe24 00000040 t __gnu_unwind_get_pr_addr
0013fe64 0000011c t get_eit_entry
0013ff80 00000088 t restore_non_core_regs
00140008 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0014001c 00000004 t _Unwind_DebugHook
00140020 00000064 t unwind_phase2
00140084 0000014c t unwind_phase2_forced
001401d0 000000a4 t __gnu_Unwind_RaiseException
00140274 00000024 t __gnu_Unwind_ForcedUnwind
00140298 00000074 t __gnu_Unwind_Resume
0014030c 00000020 t __gnu_Unwind_Resume_or_Rethrow
0014032c 00000004 t _Unwind_Complete
00140330 00000018 t _Unwind_DeleteException
00140348 00000068 t _Unwind_VRS_Get
001403b0 0000002c t _Unwind_GetGR
001403dc 00000068 t _Unwind_VRS_Set
00140444 0000002c t _Unwind_SetGR
00140470 000000c0 t __gnu_Unwind_Backtrace
00140530 00000448 t __gnu_unwind_pr_common
00140978 00000008 T __aeabi_unwind_cpp_pr0
00140980 00000008 W __aeabi_unwind_cpp_pr1
00140988 00000008 W __aeabi_unwind_cpp_pr2
00140990 000003dc t _Unwind_VRS_Pop
00140d6c 00000060 t next_unwind_byte
00140dcc 0000002c t _Unwind_GetGR.constprop.0
00140df8 00000004 t unwind_UCB_from_context
00140dfc 000003c8 t __gnu_unwind_execute
001411c4 00000048 t __gnu_unwind_frame
0014120c 00000010 t _Unwind_GetRegionStart
0014121c 0000001c t _Unwind_GetLanguageSpecificData
00141238 00000008 t _Unwind_GetDataRelBase
00141240 00000008 t _Unwind_GetTextRelBase
00141248 00000010 T ctime
00141258 00000014 T __cxa_atexit
0014126c 0000000c T __errno
00141278 00000034 T exit
001412ac 00000040 T __libc_fini_array
001412ec 0000007c T __libc_init_array
00141368 0000001c T isspace
00141384 0000001c T isxdigit
001413a0 0000001c T localtime
001413bc 00000378 T localtime_r
00141734 00000024 T __locale_mb_cur_max
00141758 00000008 T __locale_ctype_ptr_l
00141760 00000024 T __locale_ctype_ptr
00141784 00000018 T malloc
0014179c 00000018 T free
001417b4 0000078c T _malloc_r
00141f40 000002fc T __utf8_mbtowc
0014223c 00000100 T memchr
0014233c 000000fc T memcmp
00142438 00000118 T memcpy
00142550 00000154 T memmove
001426a4 00000114 T memset
001427b8 0000000c T __malloc_lock
001427c4 0000000c T __malloc_unlock
001427d0 00000064 T sprintf
00142834 00000008 T __seofread
0014283c 000000f0 T strcpy
0014292c 00000154 t iso_year_adjust
00142a80 00001158 t __strftime
00143bd8 00000050 T strftime
00143c28 0000005c T strlen
00143c84 0000010c T strncmp
00143d90 000000e0 T strncpy
00143e70 00000054 t sulp
00143ec8 00001404 T _strtod_l
001452d0 000000b8 T strtof
00145388 000001b8 t _strtol_l.isra.0
00145540 00000050 T _strtol_r
00145590 00000260 t _strtoull_l.isra.0
001457f0 00000050 T _strtoull_r
00145840 000001cc t _strtoul_l.isra.0
00145a0c 00000050 T _strtoul_r
00145a5c 00000054 T strtoul
00145ab0 00000630 t get_arg
001460e0 00003640 T _svfprintf_r
00149720 0000003c T time
0014975c 00000224 T __tzcalc_limits
00149980 0000000c T __tz_lock
0014998c 0000000c T __tz_unlock
00149998 00000010 T _tzset_unlocked
001499a8 0000046c T _tzset_unlocked_r
00149e14 000000a4 T _vsnprintf_r
00149eb8 00000038 T vsnprintf
00149ef0 000000a0 T _wcrtomb_r
00149f90 00000020 T _wcsrtombs_r
00149fb0 000000e8 T __utf8_wctomb
0014a098 0000000c T abs
0014a0a4 0000001c T asctime
0014a0c0 00000078 T asctime_r
0014a138 000000f4 T __register_exitproc
0014a22c 00000170 T __call_exitprocs
0014a39c 000001c8 t quorem
0014a568 000012e4 T _dtoa_r
0014b84c 000000f8 T _malloc_trim_r
0014b944 000002e4 T _free_r
0014bc28 000000ec t rshift
0014bd14 00000828 T __gethex
0014c53c 00000060 T __match
0014c59c 00000254 T __hexnan
0014c7f0 000000c8 T _findenv_r
0014c8b8 00000018 T _getenv_r
0014c8d0 0000000c T __gettzinfo
0014c8dc 0000027c T gmtime_r
0014cb58 0000000c T labs
0014cb64 00000008 T __localeconv_l
0014cb6c 00000024 T _localeconv_r
0014cb90 00000088 T _Balloc
0014cc18 0000001c T _Bfree
0014cc34 000000e0 T __multadd
0014cd14 000000e4 T __s2b
0014cdf8 00000058 T __hi0bits
0014ce50 0000009c T __lo0bits
0014ceec 00000020 T __i2b
0014cf0c 000001c4 T __multiply
0014d0d0 00000100 T __pow5mult
0014d1d0 000000f4 T __lshift
0014d2c4 0000005c T __mcmp
0014d320 00000168 T __mdiff
0014d488 00000074 T __ulp
0014d4fc 000000d4 T __b2d
0014d5d0 00000100 T __d2b
0014d6d0 00000084 T __ratio
0014d754 0000006c T __copybits
0014d7c0 00000078 T __any_on
0014d838 0000000c T nanf
0014d848 000000a8 T frexp
0014d8f0 00000064 T siprintf
0014d954 00000074 T siscanf
0014d9c8 000000d4 T sniprintf
0014da9c 00000630 t get_arg
0014e0cc 00000188 T __ssprint_r
0014e254 0000247c T _svfiprintf_r
001506d0 00000048 t get_arg
00150718 000000e4 T _sungetc_r
001507fc 0000006c T __ssrefill_r
00150868 000000c8 T _sfread_r
00150930 000022a8 T __ssvfiscanf_r
00152bd8 000000a4 T __submore
00152c7c 00000184 T _wcsnrtombs_l
00152e00 00000064 T _wcsnrtombs_r
00152e64 00000094 T _calloc_r
00152ef8 0000000c T __env_lock
00152f04 0000000c T __env_unlock
00152f10 00000074 T iswspace
00152f84 000001e0 t __jp2uc
00153164 000000c4 T _jp2uc
00153228 000000b4 T _mbrtowc_r
001532dc 00000020 T realloc
001532fc 000004bc T _realloc_r
001537b8 000000cc T __sccl
00153884 00000260 t _strtoll_l.isra.0
00153ae4 00000050 T _strtoll_r
00153b34 0000002c T _gettimeofday_r
00153b60 00000070 T _sbrk_r
00153bd0 00000024 T _exit
00153bf4 00000018 T __libc_lock_acquire
00153c0c 00000018 T __libc_lock_release
00153c24 00000018 T __libc_lock_acquire_recursive
00153c3c 00000018 T __libc_lock_release_recursive
00153c54 00000028 T __getreent
00153c7c T _fini
00153cd8 00000030 r ._184
00153d10 00000058 r CTRPluginFramework::g_OSDPattern
00153d68 00000a00 r font
00154768 00000038 r CTRPluginFramework::stable
001547a0 00000038 r CTRPluginFramework::ktable
001547d8 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
001547f4 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00154808 00000030 r ._184
00154858 00000038 R vtable for CTRPluginFramework::Search32
00154890 00000038 R vtable for CTRPluginFramework::Search
001548c8 00000005 r CSWTCH.47
001548d0 00000014 R vtable for CTRPluginFramework::ARCode
001548e4 0000002d r ._89
00154914 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
00154994 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
001549a0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
001549a8 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
001549b0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
001549b8 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
001549d4 00000004 R About15_array_length
001549d8 00000384 r About15_array
00154d5c 00000004 R AddFavorite25_array_length
00154d60 000009c4 r AddFavorite25_array
00155724 00000004 R AddFavoriteFilled25_array_length
00155728 000009c4 r AddFavoriteFilled25_array
001560ec 00000004 R CapsLockOn15_array_length
001560f0 00000384 r CapsLockOn15_array
00156474 00000004 R CapsLockOnFilled15_array_length
00156478 00000384 r CapsLockOnFilled15_array
001567fc 00000004 R CheckedCheckbox_array_length
00156800 00000384 r CheckedCheckbox_array
00156b84 00000004 R ClearSymbol15_array_length
00156b88 00000384 r ClearSymbol15_array
00156f0c 00000004 R ClearSymbolFilled15_array_length
00156f10 00000384 r ClearSymbolFilled15_array
00157294 00000004 R Clipboard25_array_length
00157298 000009c4 r Clipboard25_array
00157c5c 00000004 R ClipboardFilled25_array_length
00157c60 000009c4 r ClipboardFilled25_array
00158624 00000004 R CloseWindow20_array_length
00158628 00000640 r CloseWindow20_array
00158c68 00000004 R CloseWindowFilled20_array_length
00158c6c 00000640 r CloseWindowFilled20_array
001592ac 00000004 R Controller15_array_length
001592b0 00000384 r Controller15_array
00159634 00000004 R Cut25_array_length
00159638 000009c4 r Cut25_array
00159ffc 00000004 R CutFilled25_array_length
0015a000 000009c4 r CutFilled25_array
0015a9c4 00000004 R Duplicate25_array_length
0015a9c8 000009c4 r Duplicate25_array
0015b38c 00000004 R DuplicateFilled25_array_length
0015b390 000009c4 r DuplicateFilled25_array
0015bd54 00000004 R Edit25_array_length
0015bd58 000009c4 r Edit25_array
0015c71c 00000004 R EditFilled25_array_length
0015c720 000009c4 r EditFilled25_array
0015d0e4 00000004 R EnterKey15_array_length
0015d0e8 00000384 r EnterKey15_array
0015d46c 00000004 R EnterKeyFilled15_array_length
0015d470 00000384 r EnterKeyFilled15_array
0015d7f4 00000004 R File15_array_length
0015d7f8 00000384 r File15_array
0015db7c 00000004 R FolderFilled_array_length
0015db80 00000384 r FolderFilled_array
0015df04 00000004 R GameController15_array_length
0015df08 00000384 r GameController15_array
0015e28c 00000004 R GameController25_array_length
0015e290 000009c4 r GameController25_array
0015ec54 00000004 R GameControllerFilled25_array_length
0015ec58 000009c4 r GameControllerFilled25_array
0015f61c 00000004 R Grid15_array_length
0015f620 00000384 r Grid15_array
0015f9a4 00000004 R HandCursor15_array_length
0015f9a8 00000384 r HandCursor15_array
0015fd2c 00000004 R Info25_array_length
0015fd30 000009c4 r Info25_array
001606f4 00000004 R InfoFilled25_array_length
001606f8 000009c4 r InfoFilled25_array
001610bc 00000004 R Keyboard25_array_length
001610c0 000009c4 r Keyboard25_array
00161a84 00000004 R KeyboardFilled25_array_length
00161a88 000009c4 r KeyboardFilled25_array
0016244c 00000004 R Maintenance15_array_length
00162450 00000384 r Maintenance15_array
001627d4 00000004 R More15_array_length
001627d8 00000384 r More15_array
00162b5c 00000004 R Plus25_array_length
00162b60 000009c4 r Plus25_array
00163524 00000004 R PlusFilled25_array_length
00163528 000009c4 r PlusFilled25_array
00163eec 00000004 R RAM15_array_length
00163ef0 00000384 r RAM15_array
00164274 00000004 R Restart15_array_length
00164278 00000384 r Restart15_array
001645fc 00000004 R Rocket40_array_length
00164600 00001900 r Rocket40_array
00165f00 00000004 R Save25_array_length
00165f04 000009c4 r Save25_array
001668c8 00000004 R Search15_array_length
001668cc 00000384 r Search15_array
00166c50 00000004 R Settings15_array_length
00166c54 00000384 r Settings15_array
00166fd8 00000004 R Shutdown15_array_length
00166fdc 00000384 r Shutdown15_array
00167360 00000004 R Star15_array_length
00167364 00000384 r Star15_array
001676e8 00000004 R Trash25_array_length
001676ec 000009c4 r Trash25_array
001680b0 00000004 R TrashFilled25_array_length
001680b4 000009c4 r TrashFilled25_array
00168a78 00000004 R UnCheckedCheckbox_array_length
00168a7c 00000384 r UnCheckedCheckbox_array
00168e00 00000004 R UserManualFilled15_array_length
00168e04 00000384 r UserManualFilled15_array
00169188 0000001c R vtable for CTRPluginFramework::CheckBox
001691a4 0000001c R vtable for CTRPluginFramework::ComboBox
001691c0 0000001c R vtable for CTRPluginFramework::FloatingButton
001691dc 0000001c R vtable for CTRPluginFramework::NumericTextBox
001691f8 0000001c R vtable for CTRPluginFramework::TextBox
00169214 0000001c R vtable for CTRPluginFramework::TouchKey
00169230 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
00169250 00000280 r CTRPluginFramework::_cursorPositions
001694d0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
001694d8 00000048 r CTRPluginFramework::g_ctrpf
00169520 00000030 r CTRPluginFramework::g_byme
00169ad4 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
00169af0 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
00169c58 00000014 V vtable for CTRPluginFramework::MenuItem
00169c6c 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
00169c88 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
00169cf8 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
00169d14 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
00169d30 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
00169d4c 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0016ad74 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0016ad98 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0016af18 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0016af34 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0016af50 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0016afac 0000000c R typeinfo for std::bad_alloc
0016afb8 0000000d R typeinfo name for std::bad_alloc
0016afc8 00000014 R vtable for std::bad_alloc
0016b000 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0016b008 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0016b010 0000000c R typeinfo for std::bad_exception
0016b01c 00000008 R typeinfo for std::exception
0016b024 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0016b044 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0016b068 00000012 R typeinfo name for std::bad_exception
0016b07c 0000000d R typeinfo name for std::exception
0016b08c 00000014 R vtable for std::bad_exception
0016b0a0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0016b0ac 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0016b0d4 0000002c R vtable for __cxxabiv1::__si_class_type_info
0016b21c 00000008 R typeinfo for std::type_info
0016b224 0000000d R typeinfo name for std::type_info
0016b234 0000000c R typeinfo for __cxxabiv1::__class_type_info
0016b240 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0016b264 0000002c R vtable for __cxxabiv1::__class_type_info
0016b290 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0016b29c 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0016b2c0 00000014 R vtable for __gnu_cxx::recursive_init_error
0016b2d4 0000000c R typeinfo for std::logic_error
0016b2e0 0000000c R typeinfo for std::length_error
0016b2ec 0000000c R typeinfo for std::out_of_range
0016b2f8 0000000c R typeinfo for std::invalid_argument
0016b304 00000010 R typeinfo name for std::logic_error
0016b314 00000011 R typeinfo name for std::length_error
0016b328 00000011 R typeinfo name for std::out_of_range
0016b33c 00000015 R typeinfo name for std::invalid_argument
0016b354 00000014 R vtable for std::logic_error
0016b368 00000014 R vtable for std::length_error
0016b37c 00000014 R vtable for std::out_of_range
0016b390 00000014 R vtable for std::invalid_argument
0016b464 00000004 R _global_impure_ptr
0016b4b0 00000060 R __month_lengths
0016b59c 00000014 r fpi.7553
0016b5b0 00000014 r fpinan.7589
0016b5c8 00000028 r tinytens
0016b62c 00000010 r blanks.8705
0016b63c 00000010 r zeroes.8706
0016b64c 000000fc R _C_time_locale
0016b914 00000015 r day_name.6246
0016b92c 00000024 r mon_name.6247
0016b950 00000101 R _ctype_
0016ba68 00000100 R __hexdig
0016bb68 00000028 R __mprec_bigtens
0016bb90 000000c8 R __mprec_tens
0016bc58 0000000c r p05.7473
0016bc64 0000006c R __action_table
0016bcd0 00000100 R __chclass
0016bdd0 0000006c R __state_table
0016be3c 00000010 r blanks.8684
0016be4c 00000010 r zeroes.8685
0016be5c 00000022 r basefix.8255
0016be94 000000bc r a1
0016bf50 000000bc r a2
0016c00c 0000005b r a3
0016c068 00000070 r a6
0016c0d8 000000a2 r a7
0016c17c 00000040 r a8
0016c1bc 0000172a r b02cf
0016d8e8 00001a7c r d02f4
0016f5cc R __exidx_start
0016f7e4 R __exidx_end
0016f7e4 00000001 D CTRPluginFramework::g_keepRunning
0016f7e8 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0016f7ec 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0016f7f0 00000001 D CTRPluginFramework::PrivColor::_format
0016f7f4 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0016f7f8 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0016f7fc 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0016f7fd 00000001 D CTRPluginFramework::SystemImpl::_language
0016f800 00000004 D g_KProcessPIDOffset
0016f804 00000004 D About15
0016f808 00000004 D AddFavorite25
0016f80c 00000004 D AddFavoriteFilled25
0016f810 00000004 D CapsLockOn15
0016f814 00000004 D CapsLockOnFilled15
0016f818 00000004 D CheckedCheckbox
0016f81c 00000004 D ClearSymbol15
0016f820 00000004 D ClearSymbolFilled15
0016f824 00000004 D Clipboard25
0016f828 00000004 D ClipboardFilled25
0016f82c 00000004 D CloseWindow20
0016f830 00000004 D CloseWindowFilled20
0016f834 00000004 D Controller15
0016f838 00000004 D Cut25
0016f83c 00000004 D CutFilled25
0016f840 00000004 D Duplicate25
0016f844 00000004 D DuplicateFilled25
0016f848 00000004 D Edit25
0016f84c 00000004 D EditFilled25
0016f850 00000004 D EnterKey15
0016f854 00000004 D EnterKeyFilled15
0016f858 00000004 D File15
0016f85c 00000004 D FolderFilled
0016f860 00000004 D GameController15
0016f864 00000004 D GameController25
0016f868 00000004 D GameControllerFilled25
0016f86c 00000004 D Grid15
0016f870 00000004 D HandCursor15
0016f874 00000004 D Info25
0016f878 00000004 D InfoFilled25
0016f87c 00000004 D Keyboard25
0016f880 00000004 D KeyboardFilled25
0016f884 00000004 D Maintenance15
0016f888 00000004 D More15
0016f88c 00000004 D Plus25
0016f890 00000004 D PlusFilled25
0016f894 00000004 D RAM15
0016f898 00000004 D Restart15
0016f89c 00000004 D Rocket40
0016f8a0 00000004 D Save25
0016f8a4 00000004 D Search15
0016f8a8 00000004 D Settings15
0016f8ac 00000004 D Shutdown15
0016f8b0 00000004 D Star15
0016f8b4 00000004 D Trash25
0016f8b8 00000004 D TrashFilled25
0016f8bc 00000004 D UnCheckedCheckbox
0016f8c0 00000004 D UserManualFilled15
0016f8c4 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0016f8c8 D __dso_handle
0016f8cc 00000004 D __cxxabiv1::__terminate_handler
0016f8d0 00000004 D __cxxabiv1::__unexpected_handler
0016f8d4 00000001 D __fdlib_version
0016f8d8 00000004 D _impure_ptr
0016f8e0 00000460 d impure_data
0016fd40 0000016c D __global_locale
0016feac 00000408 D __malloc_av_
001702b4 00000004 D __malloc_sbrk_base
001702b8 00000004 D __malloc_trim_threshold
001702bc 0000000c d __malloc_recursive_mutex
001702c8 00000004 d __tz_mutex
001702cc 00000008 D _tzname
001702d4 0000000c D __atexit_recursive_mutex
001702e0 00000058 d tzinfo
00170338 00000004 D environ
0017033c 0000000c d __env_recursive_mutex
00170348 a _DYNAMIC
00170420 a _GLOBAL_OFFSET_TABLE_
00170438 t __frame_dummy_init_array_entry
00170438 T __init_array_start
00170438 B __preinit_array_end
00170438 B __preinit_array_start
00170438 D __tdata_lma
00170438 D __tdata_lma_end
00170438 D __TMC_END__
00170484 t __do_global_dtors_aux_fini_array_entry
00170484 T __fini_array_start
00170484 T __init_array_end
00170488 T __fini_array_end
00170488 r __rel_dyn_start
00176718 B __c_bss_start
00176718 r __rel_dyn_end
00176718 00000050 B CTRPluginFramework::QuickMenu::_instance
00176768 00000008 B CTRPluginFramework::_sdmcArchive
00176770 00000004 B CTRPluginFramework::g_continueGameEvent
00176774 00000004 B __ctru_heap_size
00176778 00000004 B g_gspEventThreadPriority
0017677c 00000004 B CTRPluginFramework::g_keepEvent
00176780 00000004 B g_mainThread
00176784 00000004 b onLoadCroLock
00176788 00000038 b g_loadCroHook
001767c0 00000004 B croReturn
001767c4 00000004 B CTRPluginFramework::g_keepThreadHandle
001767c8 00000004 B CTRPluginFramework::g_resumeEvent
001767d0 00004000 b CTRPluginFramework::keepThreadStack
0017a7d0 00010000 b CTRPluginFramework::threadStack
0018a7d0 00000004 B CTRPluginFramework::Color::Black
0018a7d4 00000004 B CTRPluginFramework::Color::Blank
0018a7d8 00000004 B CTRPluginFramework::Color::Blue
0018a7dc 00000004 B CTRPluginFramework::Color::BlackGrey
0018a7e0 00000004 B CTRPluginFramework::Color::Brown
0018a7e4 00000004 B CTRPluginFramework::Color::Cyan
0018a7e8 00000004 B CTRPluginFramework::Color::DarkGrey
0018a7ec 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0018a7f0 00000004 B CTRPluginFramework::Color::DimGrey
0018a7f4 00000004 B CTRPluginFramework::Color::DodgerBlue
0018a7f8 00000004 B CTRPluginFramework::Color::Gainsboro
0018a7fc 00000004 B CTRPluginFramework::Color::ForestGreen
0018a800 00000004 B CTRPluginFramework::Color::Green
0018a804 00000004 B CTRPluginFramework::Color::Grey
0018a808 00000004 B CTRPluginFramework::Color::LimeGreen
0018a80c 00000004 B CTRPluginFramework::Color::Magenta
0018a810 00000004 B CTRPluginFramework::Color::Orange
0018a814 00000004 B CTRPluginFramework::Color::Red
0018a818 00000004 B CTRPluginFramework::Color::Silver
0018a81c 00000004 B CTRPluginFramework::Color::SkyBlue
0018a820 00000004 B CTRPluginFramework::Color::Turquoise
0018a824 00000004 B CTRPluginFramework::Color::Yellow
0018a828 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0018a830 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0018a838 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0018a840 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0018a844 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0018a848 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0018a84c 00000180 b CTRPluginFramework::g_keyName
0018a9cc 00000004 b CTRPluginFramework::g_runningInstance
0018a9d0 00000004 B CTRPluginFramework::Controller::_keysDown
0018a9d4 00000004 B CTRPluginFramework::Controller::_keysHeld
0018a9d8 00000004 B CTRPluginFramework::Controller::_keysReleased
0018a9dc 00000018 b CTRPluginFramework::_workingDirectory
0018a9f4 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
0018c9f8 00000004 B CTRPluginFramework::System::OnAbort
0018ca00 00000008 B CTRPluginFramework::Time::Zero
0018ca08 000009c4 b CTRPluginFramework::g_rng
0018d3d0 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
0018d3d1 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
0018d3d2 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
0018d3d3 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
0018d3d4 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
0018d3d5 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
0018d3d6 00000001 B CTRPluginFramework::Preferences::ShowTopFps
0018d3d7 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
0018d3d8 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0018d3d9 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0018d3da 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
0018d3dc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0018d3e0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0018d3e8 00000078 B CTRPluginFramework::Preferences::Settings
0018d460 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
0018d461 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
0018d462 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
0018d464 00000004 b CTRPluginFramework::defaultSysFont
0018d468 00000004 B CTRPluginFramework::g_fontAllocated
0018d46c 00000004 b CTRPluginFramework::tileData
0018d470 00000004 b CTRPluginFramework::glyph
0018d474 00000004 B CTRPluginFramework::g_glyphAllocated
0018d478 0000000c B CTRPluginFramework::OSDImpl::RecLock
0018d484 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
0018d490 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0018d4a8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0018d4c0 00000038 B CTRPluginFramework::OSDImpl::OSDHook
0018d4f8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
0018d4fc 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0018d504 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0018d528 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0018d534 00000004 b CTRPluginFramework::g_second
0018d538 00000010 b CTRPluginFramework::g_fpsClock
0018d548 00000038 B CTRPluginFramework::OSDHook2
0018d580 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0018d584 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0018d585 00000001 B CTRPluginFramework::OSDImpl::MessColors
0018d588 00000001 B CTRPluginFramework::PrivColor::_useClamp
0018d58c 00000010 B CTRPluginFramework::PrivColor::_clampArea
0018d59c 00000001 B CTRPluginFramework::Renderer::_target
0018d5a0 00000004 B CTRPluginFramework::Renderer::_screen
0018d5a4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0018d5a8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0018d5ac 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0018d5b0 00000028 B CTRPluginFramework::Window::BottomWindow
0018d5d8 00000028 B CTRPluginFramework::Window::TopWindow
0018d600 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0018d610 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0018d620 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0018d624 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0018d628 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0018d62c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0018d63c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0018d640 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0018d650 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0018d654 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0018d664 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0018d668 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0018d670 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0018d678 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0018d680 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0018d688 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0018d690 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0018d694 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0018d6a0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0018d6ac 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0018d6b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0018d6c0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0018d6c8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0018d6cc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0018d6dc 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0018d6e0 00000004 b CTRPluginFramework::__pmARinstance
0018d6e4 00000004 b CTRPluginFramework::g_radioId
0018d6e8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0018d6ec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0018d6f0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
0018d6f8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0018d6fc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0018d700 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0018d708 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0018d728 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0018d738 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0018d748 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0018d74c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0018d750 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
0018d758 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
0018d760 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
0018d768 00000004 b CTRPluginFramework::g_mode
0018d76c 00000004 b CTRPluginFramework::g_HookMode
0018d770 00000004 B CTRPluginFramework::g_index
0018d774 00000004 B CTRPluginFramework::g_OpenFileLock
0018d778 00000004 B CTRPluginFramework::g_filenames
0018d77c 00000004 b CTRPluginFramework::g_buffer2
0018d780 00000030 b CTRPluginFramework::g_hookExportFile
0018d7b0 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
0018d7e8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0018d7ec 00000004 b CTRPluginFramework::g_buffer
0018d7f0 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
0018d7f4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0018d7f8 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0018d800 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0018d808 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0018d810 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0018d818 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0018d820 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0018d824 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0018d834 00000004 B CTRPluginFramework::_pool
0018d838 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0018d83a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
0018d840 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0018d844 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0018d848 00000008 b CTRPluginFramework::Heap::g_heapPool
0018d850 0000000c b sAddrMap
0018d860 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
0018d864 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
0018d8c8 00000004 B CTRPluginFramework::ProcessImpl::_processID
0018d8cc 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
0018d8d0 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
0018d8d4 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
0018d8d8 00000008 B CTRPluginFramework::ProcessImpl::_processName
0018d8e0 00000008 B CTRPluginFramework::ProcessImpl::_titleID
0018d8e8 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
0018d8ec 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
0018d8f0 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
0018d8fc 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
0018d900 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
0018d904 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
0018d908 00000038 b CTRPluginFramework::_topBuf
0018d940 00000004 B CTRPluginFramework::ScreenImpl::Top
0018d944 00000038 b CTRPluginFramework::_botBuf
0018d97c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0018d980 00000001 B CTRPluginFramework::SystemImpl::_isInit
0018d981 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
0018d984 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
0018d988 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
0018d98c 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
0018d990 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0018d994 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0018d998 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
0018d99c 0000000c B CTRPluginFramework::g_codeTypes
0018d9a8 00000001 b CTRPluginFramework::g_condAgainstData
0018d9a9 00000001 b CTRPluginFramework::g_newCondDataToggle
0018d9ac 00000004 b CTRPluginFramework::__arCodeEditor
0018d9b0 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0018d9b4 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0018d9c0 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0018d9c4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0018d9c8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0018d9d4 00000001 B CTRPluginFramework::g_heapError
0018d9d8 00000004 b cfguRefCount
0018d9dc 00000004 b cfguHandle
0018d9e0 00000004 b sharedFontAddr
0018d9e4 00000004 b srvRefCount
0018d9e8 00000004 b srv2Handle
0018d9ec 00000004 b arbiter
0018d9f0 00000004 b acRefCount
0018d9f4 00000004 b acHandle
0018d9f8 00000004 b amRefCount
0018d9fc 00000004 b amHandle
0018da00 0000000c b aptFirstHook
0018da0c 00000004 b aptLockHandle
0018da10 00000004 b serviceName.7503
0018da14 00000004 b aptMessageFunc
0018da18 00000004 b aptMessageFuncData
0018da1c 0000000c b aptEvents
0018da28 00000001 b aptHomeButtonState
0018da2c 00000004 b aptRefCount
0018da30 00000008 b aptSleepEvent
0018da38 00000004 b aptEventHandlerThread
0018da3c 00000001 b flagInit.7855
0018da3d 00000001 b flagValue.7856
0018da40 00001000 b aptParameters
0018ea40 00000004 b fsuHandle
0018ea48 00000080 b fsExemptArchives
0018eac8 00000004 b fsuRefCount
0018eacc 00000001 B fs
0018ead0 00000004 b gspEventData
0018ead4 00000038 b gspEvents
0018eb0c 0000001c b gspEventCounts
0018eb28 00000001 b gspRunEvents
0018eb2c 00000004 b gspRefCount
0018eb30 00000004 b gfxSharedMemory
0018eb34 00000001 b gfxThreadID
0018eb35 00001000 b gspThreadEventStack
0018fb38 00000004 b hidRefCount
0018fb3c 00000004 b kOld
0018fb40 00000004 b kHeld
0018fb44 00000004 b cPos
0018fb48 00000004 b tPos
0018fb4c 00000006 b aVec
0018fb52 00000006 b gRate
0018fb58 00000004 b kDown
0018fb5c 00000004 b kUp
0018fb60 00000004 b irrstRefCount
0018fb64 00000004 b kHeld
0018fb68 00000004 b csPos
0018fb6c 00000004 B _tls_size
0018fb70 b saved_stack
0018fb78 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0018fb7c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0018fb94 00000004 b CTRPluginFramework::__converter
0018fb98 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0018fb9c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0018fbb0 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
0018fbb8 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
0018fbc0 00000004 B CTRPluginFramework::__g_hexEditor
0018fbc4 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0018fbc8 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0018fbd8 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0018fbe0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0018fbe4 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0018fbe8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0018fbf0 00000004 b CTRPluginFramework::g_ctrpfString
0018fbf4 00000004 b CTRPluginFramework::g_bymeString
0018fbf8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0018fc00 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0018fc08 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0018fc10 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0018fc18 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0018fc1c 00000004 B CTRPluginFramework::ARHandler::ActiveData
0018fc20 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0018fc24 00000008 B CTRPluginFramework::ARHandler::Offset
0018fc2c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0018fc30 00000010 B CTRPluginFramework::ARHandler::Data
0018fc40 00000008 B CTRPluginFramework::ARHandler::Storage
0018fc48 00000001 b CTRPluginFramework::ToggleFloat
0018fc4c 00000008 b sMappablePool
0018fc54 0000000c b sAddrMap
0018fc60 b completed.10347
0018fc64 b object.10352
0018fc7c 00000004 b (anonymous namespace)::__new_handler
0018fc80 00000010 b (anonymous namespace)::emergency_pool
0018fc90 0000000c b eh_globals
0018fc9c 00000010 V std::string::_Rep::_S_empty_rep_storage
0018fcac 00000028 B __malloc_current_mallinfo
0018fcd4 00000004 B __malloc_max_sbrked_mem
0018fcd8 00000004 B __malloc_max_total_mem
0018fcdc 00000004 B __malloc_top_pad
0018fce0 0000000b b __tzname_dst
0018fcec 0000000b b __tzname_std
0018fcf8 00000004 b prev_tzenv
0018fcfc 00000004 B _daylight
0018fd00 00000004 B _timezone
0018fd04 00000004 b initial_env
0018fd08 00000004 b heap_start.7392
0018fd0c 00000004 B fake_heap_end
0018fd10 00000004 B fake_heap_start
0018fd14 00000048 B __syscalls
0018fd5c 00000004 B g_KProcessHandleDataOffset
0018fd60 00000080 B g_kernelParams
0018fde0 00000004 B g_sharedFont
0018fde4 00000004 B charPerSheet
0018fde8 00000004 B gspEvent
0018fdec 00000004 B gspGpuHandle
0018fdf0 00000004 B gspSharedMemHandle
0018fdf4 00000004 B gspThreadEventHandle
0018fdf8 00000004 B hidMemHandle
0018fdfc 00000004 B hidHandle
0018fe00 00000014 B hidEvents
0018fe14 00000004 B hidSharedMem
0018fe18 00000004 B irrstMemHandle
0018fe1c 00000004 B irrstEvent
0018fe20 00000004 B irrstHandle
0018fe24 00000004 B irrstSharedMem
0018fe28 00000004 B __ctru_linear_heap
0018fe2c 00000004 B __tmp
0018fe30 00000004 B __ctru_linear_heap_size
0018fe34 00000004 B __system_retAddr
0018fe38 00000004 B __ctru_heap
0018fe3c B __c_bss_end
0018fe3c A __end__
0018fe3c B __tls_end
0018fe3c B __tls_start
